package ACSL20_21;
import java.util.*;
import java.io.*;
public class C4IN_Graphs {
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		String input = br.readLine();
		System.out.println(sumPathsOfLength2(input));
		br.close();
	}
	@SuppressWarnings({ "rawtypes", "unchecked" })
	public static int sumPathsOfLength2(String edges) {
		int sum = 0;
		int[] allLen2 = new int[504];
		int permuteIndex = 0;
		for(int i = 1; i <= 9; i++) {
			for(int j = 1; j <= 9; j++) {
				if(i == j)
					continue;
				for(int k = 1; k <= 9; k++) {
					if(i == k || j == k)
						continue;
					allLen2[permuteIndex] = Integer.parseInt(String.valueOf(i) + String.valueOf(j) + String.valueOf(k));
				}
			}
		}
		ArrayList[] matrix = new ArrayList[10];
		for(int i = 0; i <= 9; i++)
			matrix[i] = new ArrayList<Integer>();
		String[] input = edges.split(" ");
		for(int i = 0; i < input.length; i++) {
			int a = Integer.parseInt(input[i].substring(0, 1));
			int b = Integer.parseInt(input[i].substring(1));
			matrix[a].add(b);
		}
		for(int i = 1; i <= 9; i++)
			Collections.sort(matrix[i]);
		
		return sum;
	}
}